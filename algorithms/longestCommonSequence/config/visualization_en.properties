#Visualization configuration
#Tue Jan 12 19:17:08 CET 2010
algorithmCategory=Dynamic programming
bXMLDrawerOriginY=50
bXMLDrawerOriginX=400
pseudocodeEmphasizedLineColor=FFFF00
pseudocodeOriginY=100
pseudocodeOriginX=450
aXMLDrawerOriginY=50
aXMLDrawerOriginX=20
ijColor=00FFFF
pseudocodeLineHeight=20
algorithmName=LCS
algorithmFileName=LongestCommonSequence
i-1jColor=00FF00
lengthXMLDrawerOriginY=100
lengthXMLDrawerOriginX=20
lengthTitle=Length
ieElementComputed=The azure element of the matrix has been computed and the corresponding common subsequence is shown in azure.
ieDifferentCharacters=In order to calculate the azure element of the matrix, since the corresponding two characters (in azure) are different, we have to choose the biggest between the green and the yellow elements.
datastructureFont=Courier-PLAIN-14
aTitle=a
algorithmDescription=A dynamic programming algorithm for computing the longest common subsequence of two strings.
ieEqualCharacters=In order to calculate the azure element of the matrix, since the corresponding two characters (in azure) are equal, we have to add 1 to the yellow element.
algorithmVisualizationFileName=LongestCommonSequence
pseudocodeTitle=Pseudo-code
datastructureColor=FFFFFF
ieStart=Two character sequences of which we want to look for the longest common subsequence by means of the dynamic programming approach.
pseudocodeEmphasizedLineWidth=450
pseudocodeFont=Courier-PLAIN-12
pseudocodeFileName=LongestCommonSequencePseudocode
pseudocodeEmphasizedLineHeight=20
ij-1Color=FFFF00
unsequenceColor=BBBBBB
pseudocodeLineWidth=450
selectInputMessage=Select the two strings
ieEnd=The length of the longest common subsequence has been computed\: the common subsequence is shown in red.
ieLengthInitialized=The length matrix has been initialized.
bTitle=b
sequenceColor=00FFFF
pseudocodeVisible=true
