#Visualization configuration
#Fri Oct 16 17:20:07 CEST 2009
algorithmCategory=Divide et impera
ieAfterFirstRecursiveCall=The product of the left parts of the two integers inside the gray node has been calculated and it is included in the green node.
ieBeforeReturn=The product of the gray node has been calculated.
pXMLDrawerOriginY=250
pXMLDrawerOriginX=20
pFont=Courier-PLAIN-16
pseudocodeEmphasizedLineColor=FFFF00
yXMLDrawerOriginY=150
pTitle=Product
yXMLDrawerOriginX=20
ieBeforeProductComputation3=and the second child
pseudocodeOriginY=20
ieBeforeProductComputation2=, the sum of the first two children minus the third child times 
pseudocodeOriginX=400
ieBeforeProductComputation1=To calculate the product of the two integers inside the gray node, we have to sum\: the first child times 
pseudocodeLineHeight=15
deltaY=40
algorithmName=Fast product between integers
deltaX=210
xTitle=First operand
sonColor=00FF00
algorithmFileName=FastIntegerProduct
ieBeforeSecondRecursiveCall=To calculate the product of the two integers inside the gray node, we have to calculate the product of their right parts, which are included in the green node.
xXMLDrawerOriginY=50
xXMLDrawerOriginX=20
algorithmDescription=A divide and conquer algorithm for computing the product of two integers
ieAfterThirdRecursiveCall=The product of the differences between the left part and the right part of the two integers inside the gray node has been calculated and it is included in the green node.
ieBeforeFirstRecursiveCall=To calculate the product of the two integers inside the gray node, we have to calculate the product of their left parts, which are included in the green node.
ieAfterSecondRecursiveCall=The product of the right parts of the two integers inside the gray node has been calculated and it is included in the green node.
algorithmVisualizationFileName=FastIntegerProduct
pseudocodeTitle=Pseudo-code
selectInputMessage2=Select the second integer
selectInputMessage1=Select the first integer
nodeFont=Courier-PLAIN-16
fatherColor=AAAAAA
ieStart=Two positive integer (represented by two arrays) which have to be multiplied by means of the divide et impera paradigm.
pseudocodeEmphasizedLineWidth=450
pseudocodeFont=Courier-PLAIN-16
yFont=Courier-PLAIN-16
pseudocodeFileName=FastIntegerProductPseudocode
pseudocodeEmphasizedLineHeight=15
nodeWidth=130
rootY=150
rootX=20
nodeHeight=20
pseudocodeLineWidth=450
ieEnd=The product of the two integers has been calculated.
graphXMLDrawerOriginY=0
yTitle=Second operand
graphXMLDrawerOriginX=0
ieBeforeThirdRecursiveCall=To calculate the product of the two integers inside the gray node, we have to calculate the product of the differences between their left and right part, which are included in the green node.
graphTitle=Recursive calls graph
ieBeforeFirstInvocation=We calculate the product of the two integers inside the node.
xFont=Courier-PLAIN-16
pseudocodeVisible=true
