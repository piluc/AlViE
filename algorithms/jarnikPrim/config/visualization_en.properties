#Visualization configuration
#Sun Nov 29 19:51:27 CET 2009
algorithmCategory=Greedy
ieSetNewWeight=The weight of the green node has been decreased\: its value is now weight of the edge linking it to its azure predecessor.
graphArcType=CONTINUE
ieNewNodeAnalysisEnd=The azure node neighborhood analysis ended.
ieNewNodeAnalysisStart=The azure node has been inserted in the minimum spanning tree\: its neighboors will now be analyzed to upgrade, if necessary, their weight.
graphFont=Courier-PLAIN-16
pseudocodeEmphasizedLineColor=AAAAAA
pseudocodeOriginY=20
pseudocodeOriginX=500
pseudocodeLineHeight=15
algorithmName=Jarnik-Prim algorithm
graphArcColor=FF0000
algorithmFileName=JarnikPrim
graphMSTColor=AAAAAA
algorithmDescription=A greedy algorithm for computing the minimum spanning tree of a graph
mstNodeShape=Rectangular
algorithmVisualizationFileName=JarnikPrim
graphName=Graph
pseudocodeTitle=Pseudo-code
neighborNodeColor=00FF00
ieWeightsInitialized=The weights of the nodes have been initialized.
ieStart=The graph on which we want to compute the minimum spanning tree using the Jarnik-Prim algorithm\: each node will contain its current weight, the nodes included in the tree will be shown in gray, and the tree edges will be shown in red.
pseudocodeEmphasizedLineWidth=400
pseudocodeFont=Courier-PLAIN-12
graphShape=Elliptical
pseudocodeFileName=JarnikPrimPseudocode
newNodeColor=00FFFF
pseudocodeEmphasizedLineHeight=15
graphArcThickness=2.0
pseudocodeLineWidth=430
selectInputMessage=Select the graph
ieEnd=The minimum spanning tree computation ended.
graphXMLDrawerOriginY=50
graphColor=FFFFFF
graphXMLDrawerOriginX=50
ieNeighborNodeAnalysisStart=The green node, neighbor of the azure one, is examinated to check whether its weight can decrease.
graphArcFont=Courier-PLAIN-16
pseudocodeVisible=true
