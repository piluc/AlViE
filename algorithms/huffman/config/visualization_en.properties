#Visualization configuration
#Sun Nov 22 11:56:17 CET 2009
algorithmCategory=Greedy
frequencyColor=FFFFFF
treeColor=FFFFFF
pseudocodeEmphasizedLineColor=FFFF00
pseudocodeOriginY=80
pseudocodeOriginX=30
ieOneNodeRemained=The remaining node is the root node and the Huffman coding tree has now been generated.
ieLeavesCreated=The algorithm has created as many leaves as there are symbols\: the weight of each leave is the frequency of the corresponding symbol.
pseudocodeLineHeight=15
algorithmName=Huffman code
algorithmFileName=Huffman
fqY=220
fqX=30
algorithmDescription=A greedy algorithm for computing a prefix-free code with minimu average code-word length
treeY=300
treeX=60
treeWidth=100
ieNewTreeCreated=A new node has been created, with the two just-removed nodes as children and the sum of their weights as the new weight.
algorithmVisualizationFileName=Huffman
minimumColor=FFFF00
pseudocodeTitle=Pseudo-code
ieFirstQueueInitialized=All the leaf nodes have beee enqueued into the first queue (by freqeuncy in increasing order)
sqName=Second queue
ieStart=Frequency table (sorted in increasing order) from which the Huffman coding tree has to be constructed.
pseudocodeEmphasizedLineWidth=700
pseudocodeFont=Courier-PLAIN-16
frequencyName=Frequency table
pseudocodeFileName=HuffmanPseudocode
pseudocodeEmphasizedLineHeight=15
ieNodesMustBeDequeued=The two nodes in yellow must be dequeued and their corresponding trees must be merged.
pseudocodeLineWidth=700
selectInputMessage=Select the sorted frequency array
ieEnd=The Huffman coding has been computed.
ieNewNodeEnqueued=The new node has been enqueued in the second queue.
sqY=260
fqName=First queue
fqColor=FFFFFF
sqX=30
sqColor=FFFFFF
frequencyY=35
frequencyX=30
ieWhileIterationBegins=The two queues contain more than one node\: hence, another iteration of the while loop must be executed.
pseudocodeVisible=true
treeName=Tree
dataStructureFont=Courier-PLAIN-16
