#Visualization configuration
#Wed Nov 17 08:40:55 CET 2010
sequenceChar=FFFF00
ieEqualCharacters=In order to calculate the value of the azure node, since the corresponding two characters (in yellow) are equal, we have to choose the biggest between\: the orange value minus the indel penalty, the green value minus the indel penalty, and the pink value plus the match premium.
editGraphPreviousNorthWestNodeColor=FF00FF
selectInputMessage=Select the two strings
indelPenalty=1
editGraphFont=Courier-PLAIN-14
ieEnd=The optimal global alignment has been computed\: the corresponding path in the edit graph is shown in green.
ieDifferentCharacters=In order to calculate the value of the azure node, since the corresponding two characters (in yellow) are different, we have to choose the biggest between\: the orange value minus the indel penalty, the green value minus the indel penalty, and the pink value minus the mismatch penalty.
ieSInitialized=The optimal global alignments between the first symbols of v and the empty string and between the first symbols of w and the empty string have been initialized.
editGraphPreviousNorthNodeColor=00FF00
ieGlobalAlignmentEnded=The length of an optimal global alignment has been computed and is shown in yellow\: the alignment itself can now be computed by making use of the directions.
matchPremium=1
editGraphNewNodeColor=00FFFF
algorithmName=Global alignment
ieStart=Two character sequences of which we want to look for an optimal global alignment by means of the dynamic programming approach.
mismatchPenalty=1
editGraphPreviousWestNodeColor=FF0022
algorithmCategory=Dynamic programming
editGraphTitle=Edit graph
sequenceNode=00FF00
ieElementComputed=The value of the azure node has been computed and the direction towards the previous node (in green) has been stored.
algorithmVisualizationFileName=GlobalAlignment
editGraphXMLDrawerOriginY=50
editGraphXMLDrawerOriginX=20
algorithmFileName=GlobalAlignment
deltaY=50
deltaX=50
editGraphCharNodeColor=FFFF00
algorithmDescription=A dynamic programming algorithm for computing an optimal global alignment of two strings.
matchPremiumName=Match premium
mismatchPenaltyName=Mismatch penalty
indelPenaltyName=Indel penalty
labelsXMLDrawerOriginX=400
labelsXMLDrawerOriginY=50
labelsTitle=Premiums and penalties
labelsColor=000000